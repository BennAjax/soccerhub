
  const mongoose = require('mongoose');
  const bcrypt = require('bcrypt-nodejs');

  // define the user schema
  const userSchema = mongoose.Schema({
      username: {type: String, unique: true},
      fullname: {type: String, unique: true, default: ''},
      email: {type: String, unique: true},
      password: {type: String, default: ''},
      userimage: {type: String, default: 'default.png'},
      facebook: {type: String, default: ''},
      fbTokens: Array,
      google: {type: String, default: ''},
      googleTokens: Array

  });

  /**
   * Encrypts the plain password generated by the user during signup . First generates the salt needed for the encryption
   * @param password String - plain password
   * @returns {string} - encrypted password
   */
  userSchema.methods.encryptPassword = function(password) {
      return bcrypt.hashSync(password, bcrypt.genSaltSync(10), null);
  };

  /**
   * Decrypts the encrypted password and compares it to the provided password during login
   * @param password String - plain password
   */
  userSchema.methods.validateUserPassword = function(password) {
      return bcrypt.compareSync(password, this.password);
  };

  // export userSchema as a model
  module.exports = mongoose.model('User', userSchema);